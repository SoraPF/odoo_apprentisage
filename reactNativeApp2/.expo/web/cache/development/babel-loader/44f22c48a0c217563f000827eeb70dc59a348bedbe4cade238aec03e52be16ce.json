{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _createElement = _interopRequireDefault(require(\"../createElement\"));\nvar forwardedProps = _interopRequireWildcard(require(\"../../modules/forwardedProps\"));\nvar _pick = _interopRequireDefault(require(\"../../modules/pick\"));\nvar _useElementLayout = _interopRequireDefault(require(\"../../modules/useElementLayout\"));\nvar _useLayoutEffect = _interopRequireDefault(require(\"../../modules/useLayoutEffect\"));\nvar _useMergeRefs = _interopRequireDefault(require(\"../../modules/useMergeRefs\"));\nvar _usePlatformMethods = _interopRequireDefault(require(\"../../modules/usePlatformMethods\"));\nvar _useResponderEvents = _interopRequireDefault(require(\"../../modules/useResponderEvents\"));\nvar _useLocale = require(\"../../modules/useLocale\");\nvar _StyleSheet = _interopRequireDefault(require(\"../StyleSheet\"));\nvar _TextInputState = _interopRequireDefault(require(\"../../modules/TextInputState\"));\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nvar isSelectionStale = function isSelectionStale(node, selection) {\n  var selectionEnd = node.selectionEnd,\n    selectionStart = node.selectionStart;\n  var start = selection.start,\n    end = selection.end;\n  return start !== selectionStart || end !== selectionEnd;\n};\nvar setSelection = function setSelection(node, selection) {\n  if (isSelectionStale(node, selection)) {\n    var start = selection.start,\n      end = selection.end;\n    try {\n      node.setSelectionRange(start, end || start);\n    } catch (e) {}\n  }\n};\nvar forwardPropsList = Object.assign({}, forwardedProps.defaultProps, forwardedProps.accessibilityProps, forwardedProps.clickProps, forwardedProps.focusProps, forwardedProps.keyboardProps, forwardedProps.mouseProps, forwardedProps.touchProps, forwardedProps.styleProps, {\n  autoCapitalize: true,\n  autoComplete: true,\n  autoCorrect: true,\n  autoFocus: true,\n  defaultValue: true,\n  disabled: true,\n  lang: true,\n  maxLength: true,\n  onChange: true,\n  onScroll: true,\n  placeholder: true,\n  pointerEvents: true,\n  readOnly: true,\n  rows: true,\n  spellCheck: true,\n  value: true,\n  type: true\n});\nvar pickProps = function pickProps(props) {\n  return (0, _pick.default)(props, forwardPropsList);\n};\nfunction isEventComposing(nativeEvent) {\n  return nativeEvent.isComposing || nativeEvent.keyCode === 229;\n}\nvar focusTimeout = null;\nvar TextInput = React.forwardRef(function (props, forwardedRef) {\n  var _props$autoCapitalize = props.autoCapitalize,\n    autoCapitalize = _props$autoCapitalize === void 0 ? 'sentences' : _props$autoCapitalize,\n    autoComplete = props.autoComplete,\n    autoCompleteType = props.autoCompleteType,\n    _props$autoCorrect = props.autoCorrect,\n    autoCorrect = _props$autoCorrect === void 0 ? true : _props$autoCorrect,\n    blurOnSubmit = props.blurOnSubmit,\n    clearTextOnFocus = props.clearTextOnFocus,\n    dir = props.dir,\n    _props$editable = props.editable,\n    editable = _props$editable === void 0 ? true : _props$editable,\n    _props$keyboardType = props.keyboardType,\n    keyboardType = _props$keyboardType === void 0 ? 'default' : _props$keyboardType,\n    _props$multiline = props.multiline,\n    multiline = _props$multiline === void 0 ? false : _props$multiline,\n    _props$numberOfLines = props.numberOfLines,\n    numberOfLines = _props$numberOfLines === void 0 ? 1 : _props$numberOfLines,\n    onBlur = props.onBlur,\n    onChange = props.onChange,\n    onChangeText = props.onChangeText,\n    onContentSizeChange = props.onContentSizeChange,\n    onFocus = props.onFocus,\n    onKeyPress = props.onKeyPress,\n    onLayout = props.onLayout,\n    onMoveShouldSetResponder = props.onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture = props.onMoveShouldSetResponderCapture,\n    onResponderEnd = props.onResponderEnd,\n    onResponderGrant = props.onResponderGrant,\n    onResponderMove = props.onResponderMove,\n    onResponderReject = props.onResponderReject,\n    onResponderRelease = props.onResponderRelease,\n    onResponderStart = props.onResponderStart,\n    onResponderTerminate = props.onResponderTerminate,\n    onResponderTerminationRequest = props.onResponderTerminationRequest,\n    onScrollShouldSetResponder = props.onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture = props.onScrollShouldSetResponderCapture,\n    onSelectionChange = props.onSelectionChange,\n    onSelectionChangeShouldSetResponder = props.onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture = props.onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder = props.onStartShouldSetResponder,\n    onStartShouldSetResponderCapture = props.onStartShouldSetResponderCapture,\n    onSubmitEditing = props.onSubmitEditing,\n    placeholderTextColor = props.placeholderTextColor,\n    returnKeyType = props.returnKeyType,\n    _props$secureTextEntr = props.secureTextEntry,\n    secureTextEntry = _props$secureTextEntr === void 0 ? false : _props$secureTextEntr,\n    selection = props.selection,\n    selectTextOnFocus = props.selectTextOnFocus,\n    spellCheck = props.spellCheck;\n  var type;\n  var inputMode;\n  switch (keyboardType) {\n    case 'email-address':\n      type = 'email';\n      break;\n    case 'number-pad':\n    case 'numeric':\n      inputMode = 'numeric';\n      break;\n    case 'decimal-pad':\n      inputMode = 'decimal';\n      break;\n    case 'phone-pad':\n      type = 'tel';\n      break;\n    case 'search':\n    case 'web-search':\n      type = 'search';\n      break;\n    case 'url':\n      type = 'url';\n      break;\n    default:\n      type = 'text';\n  }\n  if (secureTextEntry) {\n    type = 'password';\n  }\n  var dimensions = React.useRef({\n    height: null,\n    width: null\n  });\n  var hostRef = React.useRef(null);\n  var handleContentSizeChange = React.useCallback(function (hostNode) {\n    if (multiline && onContentSizeChange && hostNode != null) {\n      var newHeight = hostNode.scrollHeight;\n      var newWidth = hostNode.scrollWidth;\n      if (newHeight !== dimensions.current.height || newWidth !== dimensions.current.width) {\n        dimensions.current.height = newHeight;\n        dimensions.current.width = newWidth;\n        onContentSizeChange({\n          nativeEvent: {\n            contentSize: {\n              height: dimensions.current.height,\n              width: dimensions.current.width\n            }\n          }\n        });\n      }\n    }\n  }, [multiline, onContentSizeChange]);\n  var imperativeRef = React.useMemo(function () {\n    return function (hostNode) {\n      if (hostNode != null) {\n        hostNode.clear = function () {\n          if (hostNode != null) {\n            hostNode.value = '';\n          }\n        };\n        hostNode.isFocused = function () {\n          return hostNode != null && _TextInputState.default.currentlyFocusedField() === hostNode;\n        };\n        handleContentSizeChange(hostNode);\n      }\n    };\n  }, [handleContentSizeChange]);\n  function handleBlur(e) {\n    _TextInputState.default._currentlyFocusedNode = null;\n    if (onBlur) {\n      e.nativeEvent.text = e.target.value;\n      onBlur(e);\n    }\n  }\n  function handleChange(e) {\n    var hostNode = e.target;\n    var text = hostNode.value;\n    e.nativeEvent.text = text;\n    handleContentSizeChange(hostNode);\n    if (onChange) {\n      onChange(e);\n    }\n    if (onChangeText) {\n      onChangeText(text);\n    }\n  }\n  function handleFocus(e) {\n    var hostNode = e.target;\n    if (onFocus) {\n      e.nativeEvent.text = hostNode.value;\n      onFocus(e);\n    }\n    if (hostNode != null) {\n      _TextInputState.default._currentlyFocusedNode = hostNode;\n      if (clearTextOnFocus) {\n        hostNode.value = '';\n      }\n      if (selectTextOnFocus) {\n        if (focusTimeout != null) {\n          clearTimeout(focusTimeout);\n        }\n        focusTimeout = setTimeout(function () {\n          if (hostNode != null) {\n            hostNode.select();\n          }\n        }, 0);\n      }\n    }\n  }\n  function handleKeyDown(e) {\n    var hostNode = e.target;\n    e.stopPropagation();\n    var blurOnSubmitDefault = !multiline;\n    var shouldBlurOnSubmit = blurOnSubmit == null ? blurOnSubmitDefault : blurOnSubmit;\n    var nativeEvent = e.nativeEvent;\n    var isComposing = isEventComposing(nativeEvent);\n    if (onKeyPress) {\n      onKeyPress(e);\n    }\n    if (e.key === 'Enter' && !e.shiftKey && !isComposing && !e.isDefaultPrevented()) {\n      if ((blurOnSubmit || !multiline) && onSubmitEditing) {\n        e.preventDefault();\n        nativeEvent.text = e.target.value;\n        onSubmitEditing(e);\n      }\n      if (shouldBlurOnSubmit && hostNode != null) {\n        setTimeout(function () {\n          return hostNode.blur();\n        }, 0);\n      }\n    }\n  }\n  function handleSelectionChange(e) {\n    if (onSelectionChange) {\n      try {\n        var node = e.target;\n        var selectionStart = node.selectionStart,\n          selectionEnd = node.selectionEnd;\n        e.nativeEvent.selection = {\n          start: selectionStart,\n          end: selectionEnd\n        };\n        e.nativeEvent.text = e.target.value;\n        onSelectionChange(e);\n      } catch (e) {}\n    }\n  }\n  (0, _useLayoutEffect.default)(function () {\n    var node = hostRef.current;\n    if (node != null && selection != null) {\n      setSelection(node, selection);\n    }\n    if (document.activeElement === node) {\n      _TextInputState.default._currentlyFocusedNode = node;\n    }\n  }, [hostRef, selection]);\n  var component = multiline ? 'textarea' : 'input';\n  (0, _useElementLayout.default)(hostRef, onLayout);\n  (0, _useResponderEvents.default)(hostRef, {\n    onMoveShouldSetResponder: onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture: onMoveShouldSetResponderCapture,\n    onResponderEnd: onResponderEnd,\n    onResponderGrant: onResponderGrant,\n    onResponderMove: onResponderMove,\n    onResponderReject: onResponderReject,\n    onResponderRelease: onResponderRelease,\n    onResponderStart: onResponderStart,\n    onResponderTerminate: onResponderTerminate,\n    onResponderTerminationRequest: onResponderTerminationRequest,\n    onScrollShouldSetResponder: onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture: onScrollShouldSetResponderCapture,\n    onSelectionChangeShouldSetResponder: onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture: onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder: onStartShouldSetResponder,\n    onStartShouldSetResponderCapture: onStartShouldSetResponderCapture\n  });\n  var _useLocaleContext = (0, _useLocale.useLocaleContext)(),\n    contextDirection = _useLocaleContext.direction;\n  var supportedProps = pickProps(props);\n  supportedProps.autoCapitalize = autoCapitalize;\n  supportedProps.autoComplete = autoComplete || autoCompleteType || 'on';\n  supportedProps.autoCorrect = autoCorrect ? 'on' : 'off';\n  supportedProps.dir = dir !== undefined ? dir : 'auto';\n  supportedProps.enterKeyHint = returnKeyType;\n  supportedProps.inputMode = inputMode;\n  supportedProps.onBlur = handleBlur;\n  supportedProps.onChange = handleChange;\n  supportedProps.onFocus = handleFocus;\n  supportedProps.onKeyDown = handleKeyDown;\n  supportedProps.onSelect = handleSelectionChange;\n  supportedProps.readOnly = !editable;\n  supportedProps.rows = multiline ? numberOfLines : undefined;\n  supportedProps.spellCheck = spellCheck != null ? spellCheck : autoCorrect;\n  supportedProps.style = [{\n    '--placeholderTextColor': placeholderTextColor\n  }, styles.textinput$raw, styles.placeholder, props.style];\n  supportedProps.type = multiline ? undefined : type;\n  var platformMethodsRef = (0, _usePlatformMethods.default)(supportedProps);\n  var setRef = (0, _useMergeRefs.default)(hostRef, platformMethodsRef, imperativeRef, forwardedRef);\n  supportedProps.ref = setRef;\n  var langDirection = props.lang != null ? (0, _useLocale.getLocaleDirection)(props.lang) : null;\n  var componentDirection = props.dir || langDirection;\n  var writingDirection = componentDirection || contextDirection;\n  var element = (0, _createElement.default)(component, supportedProps, {\n    writingDirection: writingDirection\n  });\n  return element;\n});\nTextInput.displayName = 'TextInput';\nTextInput.State = _TextInputState.default;\nvar styles = _StyleSheet.default.create({\n  textinput$raw: {\n    MozAppearance: 'textfield',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    border: '0 solid black',\n    borderRadius: 0,\n    boxSizing: 'border-box',\n    font: '14px System',\n    margin: 0,\n    padding: 0,\n    resize: 'none'\n  },\n  placeholder: {\n    placeholderTextColor: 'var(--placeholderTextColor)'\n  }\n});\nvar _default = exports.default = TextInput;","map":{"version":3,"names":["React","_interopRequireWildcard","require","_createElement","_interopRequireDefault","forwardedProps","_pick","_useElementLayout","_useLayoutEffect","_useMergeRefs","_usePlatformMethods","_useResponderEvents","_useLocale","_StyleSheet","_TextInputState","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","isSelectionStale","node","selection","selectionEnd","selectionStart","start","end","setSelection","setSelectionRange","forwardPropsList","assign","defaultProps","accessibilityProps","clickProps","focusProps","keyboardProps","mouseProps","touchProps","styleProps","autoCapitalize","autoComplete","autoCorrect","autoFocus","defaultValue","disabled","lang","maxLength","onChange","onScroll","placeholder","pointerEvents","readOnly","rows","spellCheck","value","type","pickProps","props","pick","isEventComposing","nativeEvent","isComposing","keyCode","focusTimeout","TextInput","forwardRef","forwardedRef","_props$autoCapitalize","autoCompleteType","_props$autoCorrect","blurOnSubmit","clearTextOnFocus","dir","_props$editable","editable","_props$keyboardType","keyboardType","_props$multiline","multiline","_props$numberOfLines","numberOfLines","onBlur","onChangeText","onContentSizeChange","onFocus","onKeyPress","onLayout","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","onResponderEnd","onResponderGrant","onResponderMove","onResponderReject","onResponderRelease","onResponderStart","onResponderTerminate","onResponderTerminationRequest","onScrollShouldSetResponder","onScrollShouldSetResponderCapture","onSelectionChange","onSelectionChangeShouldSetResponder","onSelectionChangeShouldSetResponderCapture","onStartShouldSetResponder","onStartShouldSetResponderCapture","onSubmitEditing","placeholderTextColor","returnKeyType","_props$secureTextEntr","secureTextEntry","selectTextOnFocus","inputMode","dimensions","useRef","height","width","hostRef","handleContentSizeChange","useCallback","hostNode","newHeight","scrollHeight","newWidth","scrollWidth","current","contentSize","imperativeRef","useMemo","clear","isFocused","TextInputState","currentlyFocusedField","handleBlur","_currentlyFocusedNode","text","target","handleChange","handleFocus","clearTimeout","setTimeout","select","handleKeyDown","stopPropagation","blurOnSubmitDefault","shouldBlurOnSubmit","key","shiftKey","isDefaultPrevented","preventDefault","blur","handleSelectionChange","useLayoutEffect","document","activeElement","component","useElementLayout","useResponderEvents","_useLocaleContext","useLocaleContext","contextDirection","direction","supportedProps","undefined","enterKeyHint","onKeyDown","onSelect","style","styles","textinput$raw","platformMethodsRef","usePlatformMethods","setRef","useMergeRefs","ref","langDirection","getLocaleDirection","componentDirection","writingDirection","element","createElement","displayName","State","StyleSheet","create","MozAppearance","WebkitAppearance","backgroundColor","border","borderRadius","boxSizing","font","margin","padding","resize","_default","exports"],"sources":["/home/jason/odoo/custom_addons/reactNativeApp2/node_modules/react-native-web/dist/exports/TextInput/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nimport createElement from '../createElement';\nimport * as forwardedProps from '../../modules/forwardedProps';\nimport pick from '../../modules/pick';\nimport useElementLayout from '../../modules/useElementLayout';\nimport useLayoutEffect from '../../modules/useLayoutEffect';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport usePlatformMethods from '../../modules/usePlatformMethods';\nimport useResponderEvents from '../../modules/useResponderEvents';\nimport { getLocaleDirection, useLocaleContext } from '../../modules/useLocale';\nimport StyleSheet from '../StyleSheet';\nimport TextInputState from '../../modules/TextInputState';\n/**\n * Determines whether a 'selection' prop differs from a node's existing\n * selection state.\n */\n\nvar isSelectionStale = (node, selection) => {\n  var selectionEnd = node.selectionEnd,\n      selectionStart = node.selectionStart;\n  var start = selection.start,\n      end = selection.end;\n  return start !== selectionStart || end !== selectionEnd;\n};\n/**\n * Certain input types do no support 'selectSelectionRange' and will throw an\n * error.\n */\n\n\nvar setSelection = (node, selection) => {\n  if (isSelectionStale(node, selection)) {\n    var start = selection.start,\n        end = selection.end;\n\n    try {\n      node.setSelectionRange(start, end || start);\n    } catch (e) {}\n  }\n};\n\nvar forwardPropsList = Object.assign({}, forwardedProps.defaultProps, forwardedProps.accessibilityProps, forwardedProps.clickProps, forwardedProps.focusProps, forwardedProps.keyboardProps, forwardedProps.mouseProps, forwardedProps.touchProps, forwardedProps.styleProps, {\n  autoCapitalize: true,\n  autoComplete: true,\n  autoCorrect: true,\n  autoFocus: true,\n  defaultValue: true,\n  disabled: true,\n  lang: true,\n  maxLength: true,\n  onChange: true,\n  onScroll: true,\n  placeholder: true,\n  pointerEvents: true,\n  readOnly: true,\n  rows: true,\n  spellCheck: true,\n  value: true,\n  type: true\n});\n\nvar pickProps = props => pick(props, forwardPropsList); // If an Input Method Editor is processing key input, the 'keyCode' is 229.\n// https://www.w3.org/TR/uievents/#determine-keydown-keyup-keyCode\n\n\nfunction isEventComposing(nativeEvent) {\n  return nativeEvent.isComposing || nativeEvent.keyCode === 229;\n}\n\nvar focusTimeout = null;\nvar TextInput = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  var _props$autoCapitalize = props.autoCapitalize,\n      autoCapitalize = _props$autoCapitalize === void 0 ? 'sentences' : _props$autoCapitalize,\n      autoComplete = props.autoComplete,\n      autoCompleteType = props.autoCompleteType,\n      _props$autoCorrect = props.autoCorrect,\n      autoCorrect = _props$autoCorrect === void 0 ? true : _props$autoCorrect,\n      blurOnSubmit = props.blurOnSubmit,\n      clearTextOnFocus = props.clearTextOnFocus,\n      dir = props.dir,\n      _props$editable = props.editable,\n      editable = _props$editable === void 0 ? true : _props$editable,\n      _props$keyboardType = props.keyboardType,\n      keyboardType = _props$keyboardType === void 0 ? 'default' : _props$keyboardType,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      _props$numberOfLines = props.numberOfLines,\n      numberOfLines = _props$numberOfLines === void 0 ? 1 : _props$numberOfLines,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onChangeText = props.onChangeText,\n      onContentSizeChange = props.onContentSizeChange,\n      onFocus = props.onFocus,\n      onKeyPress = props.onKeyPress,\n      onLayout = props.onLayout,\n      onMoveShouldSetResponder = props.onMoveShouldSetResponder,\n      onMoveShouldSetResponderCapture = props.onMoveShouldSetResponderCapture,\n      onResponderEnd = props.onResponderEnd,\n      onResponderGrant = props.onResponderGrant,\n      onResponderMove = props.onResponderMove,\n      onResponderReject = props.onResponderReject,\n      onResponderRelease = props.onResponderRelease,\n      onResponderStart = props.onResponderStart,\n      onResponderTerminate = props.onResponderTerminate,\n      onResponderTerminationRequest = props.onResponderTerminationRequest,\n      onScrollShouldSetResponder = props.onScrollShouldSetResponder,\n      onScrollShouldSetResponderCapture = props.onScrollShouldSetResponderCapture,\n      onSelectionChange = props.onSelectionChange,\n      onSelectionChangeShouldSetResponder = props.onSelectionChangeShouldSetResponder,\n      onSelectionChangeShouldSetResponderCapture = props.onSelectionChangeShouldSetResponderCapture,\n      onStartShouldSetResponder = props.onStartShouldSetResponder,\n      onStartShouldSetResponderCapture = props.onStartShouldSetResponderCapture,\n      onSubmitEditing = props.onSubmitEditing,\n      placeholderTextColor = props.placeholderTextColor,\n      returnKeyType = props.returnKeyType,\n      _props$secureTextEntr = props.secureTextEntry,\n      secureTextEntry = _props$secureTextEntr === void 0 ? false : _props$secureTextEntr,\n      selection = props.selection,\n      selectTextOnFocus = props.selectTextOnFocus,\n      spellCheck = props.spellCheck;\n  var type;\n  var inputMode;\n\n  switch (keyboardType) {\n    case 'email-address':\n      type = 'email';\n      break;\n\n    case 'number-pad':\n    case 'numeric':\n      inputMode = 'numeric';\n      break;\n\n    case 'decimal-pad':\n      inputMode = 'decimal';\n      break;\n\n    case 'phone-pad':\n      type = 'tel';\n      break;\n\n    case 'search':\n    case 'web-search':\n      type = 'search';\n      break;\n\n    case 'url':\n      type = 'url';\n      break;\n\n    default:\n      type = 'text';\n  }\n\n  if (secureTextEntry) {\n    type = 'password';\n  }\n\n  var dimensions = React.useRef({\n    height: null,\n    width: null\n  });\n  var hostRef = React.useRef(null);\n  var handleContentSizeChange = React.useCallback(hostNode => {\n    if (multiline && onContentSizeChange && hostNode != null) {\n      var newHeight = hostNode.scrollHeight;\n      var newWidth = hostNode.scrollWidth;\n\n      if (newHeight !== dimensions.current.height || newWidth !== dimensions.current.width) {\n        dimensions.current.height = newHeight;\n        dimensions.current.width = newWidth;\n        onContentSizeChange({\n          nativeEvent: {\n            contentSize: {\n              height: dimensions.current.height,\n              width: dimensions.current.width\n            }\n          }\n        });\n      }\n    }\n  }, [multiline, onContentSizeChange]);\n  var imperativeRef = React.useMemo(() => hostNode => {\n    // TextInput needs to add more methods to the hostNode in addition to those\n    // added by `usePlatformMethods`. This is temporarily until an API like\n    // `TextInput.clear(hostRef)` is added to React Native.\n    if (hostNode != null) {\n      hostNode.clear = function () {\n        if (hostNode != null) {\n          hostNode.value = '';\n        }\n      };\n\n      hostNode.isFocused = function () {\n        return hostNode != null && TextInputState.currentlyFocusedField() === hostNode;\n      };\n\n      handleContentSizeChange(hostNode);\n    }\n  }, [handleContentSizeChange]);\n\n  function handleBlur(e) {\n    TextInputState._currentlyFocusedNode = null;\n\n    if (onBlur) {\n      e.nativeEvent.text = e.target.value;\n      onBlur(e);\n    }\n  }\n\n  function handleChange(e) {\n    var hostNode = e.target;\n    var text = hostNode.value;\n    e.nativeEvent.text = text;\n    handleContentSizeChange(hostNode);\n\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onChangeText) {\n      onChangeText(text);\n    }\n  }\n\n  function handleFocus(e) {\n    var hostNode = e.target;\n\n    if (onFocus) {\n      e.nativeEvent.text = hostNode.value;\n      onFocus(e);\n    }\n\n    if (hostNode != null) {\n      TextInputState._currentlyFocusedNode = hostNode;\n\n      if (clearTextOnFocus) {\n        hostNode.value = '';\n      }\n\n      if (selectTextOnFocus) {\n        // Safari requires selection to occur in a setTimeout\n        if (focusTimeout != null) {\n          clearTimeout(focusTimeout);\n        }\n\n        focusTimeout = setTimeout(() => {\n          if (hostNode != null) {\n            hostNode.select();\n          }\n        }, 0);\n      }\n    }\n  }\n\n  function handleKeyDown(e) {\n    var hostNode = e.target; // Prevent key events bubbling (see #612)\n\n    e.stopPropagation();\n    var blurOnSubmitDefault = !multiline;\n    var shouldBlurOnSubmit = blurOnSubmit == null ? blurOnSubmitDefault : blurOnSubmit;\n    var nativeEvent = e.nativeEvent;\n    var isComposing = isEventComposing(nativeEvent);\n\n    if (onKeyPress) {\n      onKeyPress(e);\n    }\n\n    if (e.key === 'Enter' && !e.shiftKey && // Do not call submit if composition is occuring.\n    !isComposing && !e.isDefaultPrevented()) {\n      if ((blurOnSubmit || !multiline) && onSubmitEditing) {\n        // prevent \"Enter\" from inserting a newline or submitting a form\n        e.preventDefault();\n        nativeEvent.text = e.target.value;\n        onSubmitEditing(e);\n      }\n\n      if (shouldBlurOnSubmit && hostNode != null) {\n        setTimeout(() => hostNode.blur(), 0);\n      }\n    }\n  }\n\n  function handleSelectionChange(e) {\n    if (onSelectionChange) {\n      try {\n        var node = e.target;\n        var selectionStart = node.selectionStart,\n            selectionEnd = node.selectionEnd;\n        e.nativeEvent.selection = {\n          start: selectionStart,\n          end: selectionEnd\n        };\n        e.nativeEvent.text = e.target.value;\n        onSelectionChange(e);\n      } catch (e) {}\n    }\n  }\n\n  useLayoutEffect(() => {\n    var node = hostRef.current;\n\n    if (node != null && selection != null) {\n      setSelection(node, selection);\n    }\n\n    if (document.activeElement === node) {\n      TextInputState._currentlyFocusedNode = node;\n    }\n  }, [hostRef, selection]);\n  var component = multiline ? 'textarea' : 'input';\n  useElementLayout(hostRef, onLayout);\n  useResponderEvents(hostRef, {\n    onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture,\n    onResponderEnd,\n    onResponderGrant,\n    onResponderMove,\n    onResponderReject,\n    onResponderRelease,\n    onResponderStart,\n    onResponderTerminate,\n    onResponderTerminationRequest,\n    onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture,\n    onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder,\n    onStartShouldSetResponderCapture\n  });\n\n  var _useLocaleContext = useLocaleContext(),\n      contextDirection = _useLocaleContext.direction;\n\n  var supportedProps = pickProps(props);\n  supportedProps.autoCapitalize = autoCapitalize;\n  supportedProps.autoComplete = autoComplete || autoCompleteType || 'on';\n  supportedProps.autoCorrect = autoCorrect ? 'on' : 'off'; // 'auto' by default allows browsers to infer writing direction\n\n  supportedProps.dir = dir !== undefined ? dir : 'auto';\n  supportedProps.enterKeyHint = returnKeyType;\n  supportedProps.inputMode = inputMode;\n  supportedProps.onBlur = handleBlur;\n  supportedProps.onChange = handleChange;\n  supportedProps.onFocus = handleFocus;\n  supportedProps.onKeyDown = handleKeyDown;\n  supportedProps.onSelect = handleSelectionChange;\n  supportedProps.readOnly = !editable;\n  supportedProps.rows = multiline ? numberOfLines : undefined;\n  supportedProps.spellCheck = spellCheck != null ? spellCheck : autoCorrect;\n  supportedProps.style = [{\n    '--placeholderTextColor': placeholderTextColor\n  }, styles.textinput$raw, styles.placeholder, props.style];\n  supportedProps.type = multiline ? undefined : type;\n  var platformMethodsRef = usePlatformMethods(supportedProps);\n  var setRef = useMergeRefs(hostRef, platformMethodsRef, imperativeRef, forwardedRef);\n  supportedProps.ref = setRef;\n  var langDirection = props.lang != null ? getLocaleDirection(props.lang) : null;\n  var componentDirection = props.dir || langDirection;\n  var writingDirection = componentDirection || contextDirection;\n  var element = createElement(component, supportedProps, {\n    writingDirection\n  });\n  return element;\n});\nTextInput.displayName = 'TextInput'; // $FlowFixMe\n\nTextInput.State = TextInputState;\nvar styles = StyleSheet.create({\n  textinput$raw: {\n    MozAppearance: 'textfield',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    border: '0 solid black',\n    borderRadius: 0,\n    boxSizing: 'border-box',\n    font: '14px System',\n    margin: 0,\n    padding: 0,\n    resize: 'none'\n  },\n  placeholder: {\n    placeholderTextColor: 'var(--placeholderTextColor)'\n  }\n});\nexport default TextInput;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}